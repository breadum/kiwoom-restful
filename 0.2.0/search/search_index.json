{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"api/","title":"API Reference","text":"<pre><code>    show_if_no_docstring: false\n    show_root_heading: true\n</code></pre>"},{"location":"api/#kiwoom","title":"kiwoom","text":""},{"location":"api/#kiwoom.Bot","title":"Bot","text":"<p>The highest level of usage for Kiwoom REST API</p>"},{"location":"api/#kiwoom.Bot.debug","title":"debug","text":"<pre><code>debug(debugging=True)\n</code></pre> <p>Set debugging mode that will print every request and response.</p> <p>Parameters:</p> Name Type Description Default <code>debugging</code> <code>bool</code> <p>debugging mode is False at first</p> <code>True</code>"},{"location":"api/#kiwoom.Bot.token","title":"token","text":"<pre><code>token()\n</code></pre> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>token</p>"},{"location":"api/#kiwoom.Bot.connect","title":"connect  <code>async</code>","text":"<pre><code>connect()\n</code></pre> <p>Connect to Kiwoom REST API server.</p>"},{"location":"api/#kiwoom.Bot.close","title":"close  <code>async</code>","text":"<pre><code>close()\n</code></pre> <p>Close the connection and clean up resources.</p>"},{"location":"api/#kiwoom.Bot.stock_list","title":"stock_list  <code>async</code>","text":"<pre><code>stock_list(market, ats=True)\n</code></pre> <p>Get stock list for given market.</p> <p>Parameters:</p> Name Type Description Default <code>market</code> <code>str</code> <p>{ 'KOSPI': '0', 'KOSDAQ': '10', 'ELW': '3', '\ubba4\ucd94\uc5bc\ud380\ub4dc': '4', '\uc2e0\uc8fc\uc778\uc218\uad8c': '5', '\ub9ac\uce20': '6', 'ETF': '8', '\ud558\uc774\uc77c\ub4dc\ud380\ub4dc': '9', 'K-OTC': '30', 'KONEX': '50', 'ETN': '60', 'NXT': 'NXT'</p> required <code>ats</code> <code>bool</code> <p>\ub300\uccb4\uac70\ub798\uc18c \ubc18\uc601\ud55c \ud1b5\ud569\ucf54\ub4dc \uc5ec\ubd80. Defaults to True.</p> <code>True</code> <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: stock codes</p>"},{"location":"api/#kiwoom.Bot.candle","title":"candle  <code>async</code>","text":"<pre><code>candle(code, period, ctype, start=None, end=None)\n</code></pre> <p>Get candle chart data for given code, period, and code type.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>str</code> <p>code of stock or sector, e.g. '005930_AL'</p> required <code>period</code> <code>str</code> <p>period of candle, {\"tick\", \"min\", \"day\"}</p> required <code>ctype</code> <code>str</code> <p>type of stock or sector, {\"stock\", \"sector\"}</p> required <code>start</code> <code>str</code> <p>start date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <code>end</code> <code>str</code> <p>end date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>DataFrame</code> <code>DataFrame</code> <p>description</p>"},{"location":"api/#kiwoom.Bot.trade","title":"trade  <code>async</code>","text":"<pre><code>trade(start, end='')\n</code></pre> <p>\uacc4\uc88c \uccb4\uacb0\ub0b4\uc5ed (\ud0a4\uc6c0\uc99d\uad8c 0343 \ud654\uba74) Get trade data for given start and end date.</p> <p>Parameters:</p> Name Type Description Default <code>start</code> <code>str</code> <p>start date in YYYYMMDD format.</p> required <code>end</code> <code>str</code> <p>end date in YYYYMMDD format. Defaults to \"\".</p> <code>''</code> <p>Returns:</p> Name Type Description <code>DataFrame</code> <code>DataFrame</code> <p>\ud0a4\uc6c0\uc99d\uad8c 0343 \ud654\uba74 \uccb4\uacb0\ub0b4\uc5ed Excel \ud615\uc2dd</p>"},{"location":"api/#kiwoom.Bot.run","title":"run  <code>async</code>","text":"<pre><code>run()\n</code></pre> <p>Run the bot with strategy logic.</p>"},{"location":"api/#kiwoom.API","title":"API","text":"<p>               Bases: <code>Client</code></p> <p>Request and Receive data with Kiwoom REST API</p>"},{"location":"api/#kiwoom.API.stock_list","title":"stock_list  <code>async</code>","text":"<pre><code>stock_list(market)\n</code></pre> <p>Get stock list of codes for given market code.</p> <p>Parameters:</p> Name Type Description Default <code>market</code> <code>str</code> <p>market code.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>No data is available for given market code.</p> <p>Returns:</p> Name Type Description <code>dict</code> <p>http response containing stock codes</p>"},{"location":"api/#kiwoom.API.candle","title":"candle  <code>async</code>","text":"<pre><code>candle(code, period, ctype, start=None, end=None)\n</code></pre> <p>Candle chart data</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>str</code> <p>code of stock or sector, e.g. '005930_AL'.</p> required <code>period</code> <code>str</code> <p>period of candle, {\"tick\", \"min\", \"day\"}.</p> required <code>ctype</code> <code>str</code> <p>type of stock or sector, {\"stock\", \"sector\"}.</p> required <code>start</code> <code>str</code> <p>start date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <code>end</code> <code>str</code> <p>end date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>ValueError</code> <p>Invalid 'ctype' or 'period'</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>raw candle data</p>"},{"location":"api/#kiwoom.API.trade","title":"trade  <code>async</code>","text":"<pre><code>trade(start, end='')\n</code></pre> <p>\uacc4\uc88c \uccb4\uacb0\ub0b4\uc5ed (\ud0a4\uc6c0\uc99d\uad8c 0343 \ud654\uba74) \ucd5c\uadfc 2\uac1c\uc6d4\ub9cc \uc870\ud68c \uac00\ub2a5</p> <p>Parameters:</p> Name Type Description Default <code>start</code> <code>str</code> <p>start date in YYYYMMDD format</p> required <code>end</code> <code>str</code> <p>end date in YYYYMMDD format</p> <code>''</code> <p>Returns:</p> Type Description <code>list[dict]</code> <p>list[dict]: raw trade data</p>"},{"location":"api/#kiwoom.API.add_callback_on_real_data","title":"add_callback_on_real_data","text":"<pre><code>add_callback_on_real_data(real_type, callback)\n</code></pre> <p>Add callback function on live stream websocket data where trnm is 'REAL'.</p> <p>Suppose that fn = lambda msg: print(msg), which takes msg and simply prints. - add_callback_on_real_data(real_type='OB', fn=fn)     printing is applied when tick data(type 'OB') has been received.</p> <p>You may add callback function on 'PING' and 'LOGIN' as well, by setting real_type to 'PING' or 'LOGIN'.</p> <p>Asynchronous callback function is recommended. Async and sync callback functions are both running in background, not in blocking way.</p> <p>If async callback function wrapped with lambda function, it will never be awaited. Use 'async def wrapper(callback: Callable)' instead.</p> <p>Parameters:</p> Name Type Description Default <code>real_type</code> <code>(str, None)</code> <p>real type described in Kiwoom REST API.</p> required <code>callback</code> <code>Callable</code> <p>callback function takes raw msg str as an argument</p> required"},{"location":"api/#kiwoom.API.register_tick","title":"register_tick  <code>async</code>","text":"<pre><code>register_tick(grp_no, codes, refresh='1')\n</code></pre> <p>(\uc2e4\uc2dc\uac04\uc2dc\uc138 &gt; \uc8fc\uc2dd\uccb4\uacb0 '0B') Register transactions with given grp_no and codes with refresh option.</p> <p>Parameters:</p> Name Type Description Default <code>grp_no</code> <code>str</code> <p>\uadf8\ub8f9\ubc88\ud638</p> required <code>codes</code> <code>list[str]</code> <p>\uc885\ubaa9\ucf54\ub4dc</p> required <code>refresh</code> <code>str</code> <p>\uae30\uc874\ub4f1\ub85d\uc720\uc9c0\uc5ec\ubd80(\uae30\uc874\uc720\uc9c0:'1', \uc2e0\uaddc\ub4f1\ub85d:'0'). Defaults to '1'.</p> <code>'1'</code>"},{"location":"api/#kiwoom.API.register_hoga","title":"register_hoga  <code>async</code>","text":"<pre><code>register_hoga(grp_no, codes, refresh='1')\n</code></pre> <p>(\uc2e4\uc2dc\uac04\uc2dc\uc138 &gt; \uc8fc\uc2dd\ud638\uac00\uc794\ub7c9 '0D') Register order book with given grp_no and codes with refresh option.</p> <p>Parameters:</p> Name Type Description Default <code>grp_no</code> <code>str</code> <p>\uadf8\ub8f9\ubc88\ud638</p> required <code>codes</code> <code>list[str]</code> <p>\uc885\ubaa9\ucf54\ub4dc</p> required <code>refresh</code> <code>str</code> <p>\uae30\uc874\ub4f1\ub85d\uc720\uc9c0\uc5ec\ubd80(\uae30\uc874\uc720\uc9c0:'1', \uc2e0\uaddc\ub4f1\ub85d:'0'). Defaults to '1'.</p> <code>'1'</code>"},{"location":"api/#kiwoom.API.remove_register","title":"remove_register  <code>async</code>","text":"<pre><code>remove_register(grp_no, type)\n</code></pre> <p>Remove registered group with given grp_no and real tr type. if types is empty, nothing is done.</p> <p>Parameters:</p> Name Type Description Default <code>grp_no</code> <code>str</code> <p>\uadf8\ub8f9\ubc88\ud638</p> required <code>type</code> <code>str | list[str]</code> <p>\uc2e4\uc2dc\uac04 \ub370\uc774\ud130 \ud0c0\uc785 e.g. (0B, 0D, DD)</p> required"}]}
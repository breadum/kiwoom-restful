{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"api/","title":"API Reference","text":""},{"location":"api/#kiwoom","title":"kiwoom","text":""},{"location":"api/#kiwoom.MOCK","title":"MOCK  <code>module-attribute</code>","text":"<pre><code>MOCK = 'https://mockapi.kiwoom.com'\n</code></pre>"},{"location":"api/#kiwoom.REAL","title":"REAL  <code>module-attribute</code>","text":"<pre><code>REAL = 'https://api.kiwoom.com'\n</code></pre>"},{"location":"api/#kiwoom.API","title":"API","text":"<p>               Bases: <code>Client</code></p> <p>Request and Receive data with Kiwoom REST API</p>"},{"location":"api/#kiwoom.API.url","title":"url  <code>instance-attribute</code>","text":"<pre><code>url = url\n</code></pre>"},{"location":"api/#kiwoom.API.queue","title":"queue  <code>instance-attribute</code>","text":"<pre><code>queue = Queue()\n</code></pre>"},{"location":"api/#kiwoom.API.socket","title":"socket  <code>instance-attribute</code>","text":"<pre><code>socket = Socket(url=url, queue=queue)\n</code></pre>"},{"location":"api/#kiwoom.API.connected","title":"connected  <code>instance-attribute</code>","text":"<pre><code>connected = False\n</code></pre>"},{"location":"api/#kiwoom.API.connect","title":"connect  <code>async</code>","text":"<pre><code>connect()\n</code></pre>"},{"location":"api/#kiwoom.API.close","title":"close  <code>async</code>","text":"<pre><code>close()\n</code></pre>"},{"location":"api/#kiwoom.API.stock_list","title":"stock_list  <code>async</code>","text":"<pre><code>stock_list(market)\n</code></pre> <p>Get stock list of codes for given market code.</p> <p>Parameters:</p> Name Type Description Default <code>market</code> <code>str</code> <p>market code.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>No data is available for given market code.</p> <p>Returns:</p> Name Type Description <code>dict</code> <p>http response containing stock codes</p>"},{"location":"api/#kiwoom.API.candle","title":"candle  <code>async</code>","text":"<pre><code>candle(code, period, ctype, start=None, end=None)\n</code></pre> <p>Candle chart data</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>str</code> <p>code of stock or sector, e.g. '005930_AL'.</p> required <code>period</code> <code>str</code> <p>period of candle, {\"tick\", \"min\", \"day\"}.</p> required <code>ctype</code> <code>str</code> <p>type of stock or sector, {\"stock\", \"sector\"}.</p> required <code>start</code> <code>str</code> <p>start date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <code>end</code> <code>str</code> <p>end date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>ValueError</code> <p>Invalid 'ctype' or 'period'</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>raw candle data</p>"},{"location":"api/#kiwoom.API.trade","title":"trade  <code>async</code>","text":"<pre><code>trade(start, end='')\n</code></pre> <p>\uacc4\uc88c \uccb4\uacb0\ub0b4\uc5ed (\ud0a4\uc6c0\uc99d\uad8c 0343 \ud654\uba74) \ucd5c\uadfc 2\uac1c\uc6d4\ub9cc \uc870\ud68c \uac00\ub2a5</p> <p>Parameters:</p> Name Type Description Default <code>start</code> <code>str</code> <p>start date in YYYYMMDD format</p> required <code>end</code> <code>str</code> <p>end date in YYYYMMDD format</p> <code>''</code> <p>Returns:</p> Type Description <code>list[dict]</code> <p>list[dict]: raw trade data</p>"},{"location":"api/#kiwoom.API.add_callback_on_real_data","title":"add_callback_on_real_data","text":"<pre><code>add_callback_on_real_data(real_type, callback)\n</code></pre> <p>Add callback function on live stream websocket data where trnm is 'REAL'.</p> <p>Suppose that fn = lambda msg: print(msg), which takes msg and simply prints. - add_callback_on_real_data(real_type='OB', fn=fn)     printing is applied when tick data(type 'OB') has been received.</p> <p>You may add callback function on 'PING' and 'LOGIN' as well, by setting real_type to 'PING' or 'LOGIN'.</p> <p>Asynchronous callback function is recommended. Async and sync callback functions are both running in background, not in blocking way.</p> <p>If async callback function wrapped with lambda function, it will never be awaited. Use 'async def wrapper(callback: Callable)' instead.</p> <p>Parameters:</p> Name Type Description Default <code>real_type</code> <code>(str, None)</code> <p>real type described in Kiwoom REST API.</p> required <code>callback</code> <code>Callable</code> <p>callback function takes raw msg str as an argument</p> required"},{"location":"api/#kiwoom.API.register_tick","title":"register_tick  <code>async</code>","text":"<pre><code>register_tick(grp_no, codes, refresh='1')\n</code></pre> <p>(\uc2e4\uc2dc\uac04\uc2dc\uc138 &gt; \uc8fc\uc2dd\uccb4\uacb0 '0B') Register transactions with given grp_no and codes with refresh option.</p> <p>Parameters:</p> Name Type Description Default <code>grp_no</code> <code>str</code> <p>\uadf8\ub8f9\ubc88\ud638</p> required <code>codes</code> <code>list[str]</code> <p>\uc885\ubaa9\ucf54\ub4dc</p> required <code>refresh</code> <code>str</code> <p>\uae30\uc874\ub4f1\ub85d\uc720\uc9c0\uc5ec\ubd80(\uae30\uc874\uc720\uc9c0:'1', \uc2e0\uaddc\ub4f1\ub85d:'0'). Defaults to '1'.</p> <code>'1'</code>"},{"location":"api/#kiwoom.API.register_hoga","title":"register_hoga  <code>async</code>","text":"<pre><code>register_hoga(grp_no, codes, refresh='1')\n</code></pre> <p>(\uc2e4\uc2dc\uac04\uc2dc\uc138 &gt; \uc8fc\uc2dd\ud638\uac00\uc794\ub7c9 '0D') Register order book with given grp_no and codes with refresh option.</p> <p>Parameters:</p> Name Type Description Default <code>grp_no</code> <code>str</code> <p>\uadf8\ub8f9\ubc88\ud638</p> required <code>codes</code> <code>list[str]</code> <p>\uc885\ubaa9\ucf54\ub4dc</p> required <code>refresh</code> <code>str</code> <p>\uae30\uc874\ub4f1\ub85d\uc720\uc9c0\uc5ec\ubd80(\uae30\uc874\uc720\uc9c0:'1', \uc2e0\uaddc\ub4f1\ub85d:'0'). Defaults to '1'.</p> <code>'1'</code>"},{"location":"api/#kiwoom.API.remove_register","title":"remove_register  <code>async</code>","text":"<pre><code>remove_register(grp_no, type)\n</code></pre> <p>Remove registered group with given grp_no and real tr type. if types is empty, nothing is done.</p> <p>Parameters:</p> Name Type Description Default <code>grp_no</code> <code>str</code> <p>\uadf8\ub8f9\ubc88\ud638</p> required <code>type</code> <code>str | list[str]</code> <p>\uc2e4\uc2dc\uac04 \ub370\uc774\ud130 \ud0c0\uc785 e.g. (0B, 0D, DD)</p> required"},{"location":"api/#kiwoom.Bot","title":"Bot","text":"<p>The highest level of usage for Kiwoom REST API</p>"},{"location":"api/#kiwoom.Bot.api","title":"api  <code>instance-attribute</code>","text":"<pre><code>api = API(host, appkey, secretkey)\n</code></pre>"},{"location":"api/#kiwoom.Bot.debug","title":"debug","text":"<pre><code>debug(debugging=True)\n</code></pre> <p>Set debugging mode that will print every request and response.</p> <p>Parameters:</p> Name Type Description Default <code>debugging</code> <code>bool</code> <p>debugging mode is False at first</p> <code>True</code>"},{"location":"api/#kiwoom.Bot.token","title":"token","text":"<pre><code>token()\n</code></pre> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>token</p>"},{"location":"api/#kiwoom.Bot.connect","title":"connect  <code>async</code>","text":"<pre><code>connect()\n</code></pre> <p>Connect to Kiwoom REST API server.</p>"},{"location":"api/#kiwoom.Bot.close","title":"close  <code>async</code>","text":"<pre><code>close()\n</code></pre> <p>Close the connection and clean up resources.</p>"},{"location":"api/#kiwoom.Bot.stock_list","title":"stock_list  <code>async</code>","text":"<pre><code>stock_list(market, ats=True)\n</code></pre> <p>Get stock list for given market.</p> <p>Parameters:</p> Name Type Description Default <code>market</code> <code>str</code> <p>{ 'KOSPI': '0', 'KOSDAQ': '10', 'ELW': '3', '\ubba4\ucd94\uc5bc\ud380\ub4dc': '4', '\uc2e0\uc8fc\uc778\uc218\uad8c': '5', '\ub9ac\uce20': '6', 'ETF': '8', '\ud558\uc774\uc77c\ub4dc\ud380\ub4dc': '9', 'K-OTC': '30', 'KONEX': '50', 'ETN': '60', 'NXT': 'NXT'</p> required <code>ats</code> <code>bool</code> <p>\ub300\uccb4\uac70\ub798\uc18c \ubc18\uc601\ud55c \ud1b5\ud569\ucf54\ub4dc \uc5ec\ubd80. Defaults to True.</p> <code>True</code> <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: stock codes</p>"},{"location":"api/#kiwoom.Bot.candle","title":"candle  <code>async</code>","text":"<pre><code>candle(code, period, ctype, start=None, end=None)\n</code></pre> <p>Get candle chart data for given code, period, and code type.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>str</code> <p>code of stock or sector, e.g. '005930_AL'</p> required <code>period</code> <code>str</code> <p>period of candle, {\"tick\", \"min\", \"day\"}</p> required <code>ctype</code> <code>str</code> <p>type of stock or sector, {\"stock\", \"sector\"}</p> required <code>start</code> <code>str</code> <p>start date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <code>end</code> <code>str</code> <p>end date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>DataFrame</code> <code>DataFrame</code> <p>description</p>"},{"location":"api/#kiwoom.Bot.trade","title":"trade  <code>async</code>","text":"<pre><code>trade(start, end='')\n</code></pre> <p>\uacc4\uc88c \uccb4\uacb0\ub0b4\uc5ed (\ud0a4\uc6c0\uc99d\uad8c 0343 \ud654\uba74) Get trade data for given start and end date.</p> <p>Parameters:</p> Name Type Description Default <code>start</code> <code>str</code> <p>start date in YYYYMMDD format.</p> required <code>end</code> <code>str</code> <p>end date in YYYYMMDD format. Defaults to \"\".</p> <code>''</code> <p>Returns:</p> Name Type Description <code>DataFrame</code> <code>DataFrame</code> <p>\ud0a4\uc6c0\uc99d\uad8c 0343 \ud654\uba74 \uccb4\uacb0\ub0b4\uc5ed Excel \ud615\uc2dd</p>"},{"location":"api/#kiwoom.Bot.run","title":"run  <code>async</code>","text":"<pre><code>run()\n</code></pre> <p>Run the bot with strategy logic.</p>"},{"location":"api/#kiwoom.api","title":"api","text":""},{"location":"api/#kiwoom.api.API","title":"API","text":"<p>               Bases: <code>Client</code></p> <p>Request and Receive data with Kiwoom REST API</p>"},{"location":"api/#kiwoom.api.API.url","title":"url  <code>instance-attribute</code>","text":"<pre><code>url = url\n</code></pre>"},{"location":"api/#kiwoom.api.API.queue","title":"queue  <code>instance-attribute</code>","text":"<pre><code>queue = Queue()\n</code></pre>"},{"location":"api/#kiwoom.api.API.socket","title":"socket  <code>instance-attribute</code>","text":"<pre><code>socket = Socket(url=url, queue=queue)\n</code></pre>"},{"location":"api/#kiwoom.api.API.connected","title":"connected  <code>instance-attribute</code>","text":"<pre><code>connected = False\n</code></pre>"},{"location":"api/#kiwoom.api.API.connect","title":"connect  <code>async</code>","text":"<pre><code>connect()\n</code></pre>"},{"location":"api/#kiwoom.api.API.close","title":"close  <code>async</code>","text":"<pre><code>close()\n</code></pre>"},{"location":"api/#kiwoom.api.API.stock_list","title":"stock_list  <code>async</code>","text":"<pre><code>stock_list(market)\n</code></pre> <p>Get stock list of codes for given market code.</p> <p>Parameters:</p> Name Type Description Default <code>market</code> <code>str</code> <p>market code.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>No data is available for given market code.</p> <p>Returns:</p> Name Type Description <code>dict</code> <p>http response containing stock codes</p>"},{"location":"api/#kiwoom.api.API.candle","title":"candle  <code>async</code>","text":"<pre><code>candle(code, period, ctype, start=None, end=None)\n</code></pre> <p>Candle chart data</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>str</code> <p>code of stock or sector, e.g. '005930_AL'.</p> required <code>period</code> <code>str</code> <p>period of candle, {\"tick\", \"min\", \"day\"}.</p> required <code>ctype</code> <code>str</code> <p>type of stock or sector, {\"stock\", \"sector\"}.</p> required <code>start</code> <code>str</code> <p>start date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <code>end</code> <code>str</code> <p>end date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>ValueError</code> <p>Invalid 'ctype' or 'period'</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>raw candle data</p>"},{"location":"api/#kiwoom.api.API.trade","title":"trade  <code>async</code>","text":"<pre><code>trade(start, end='')\n</code></pre> <p>\uacc4\uc88c \uccb4\uacb0\ub0b4\uc5ed (\ud0a4\uc6c0\uc99d\uad8c 0343 \ud654\uba74) \ucd5c\uadfc 2\uac1c\uc6d4\ub9cc \uc870\ud68c \uac00\ub2a5</p> <p>Parameters:</p> Name Type Description Default <code>start</code> <code>str</code> <p>start date in YYYYMMDD format</p> required <code>end</code> <code>str</code> <p>end date in YYYYMMDD format</p> <code>''</code> <p>Returns:</p> Type Description <code>list[dict]</code> <p>list[dict]: raw trade data</p>"},{"location":"api/#kiwoom.api.API.add_callback_on_real_data","title":"add_callback_on_real_data","text":"<pre><code>add_callback_on_real_data(real_type, callback)\n</code></pre> <p>Add callback function on live stream websocket data where trnm is 'REAL'.</p> <p>Suppose that fn = lambda msg: print(msg), which takes msg and simply prints. - add_callback_on_real_data(real_type='OB', fn=fn)     printing is applied when tick data(type 'OB') has been received.</p> <p>You may add callback function on 'PING' and 'LOGIN' as well, by setting real_type to 'PING' or 'LOGIN'.</p> <p>Asynchronous callback function is recommended. Async and sync callback functions are both running in background, not in blocking way.</p> <p>If async callback function wrapped with lambda function, it will never be awaited. Use 'async def wrapper(callback: Callable)' instead.</p> <p>Parameters:</p> Name Type Description Default <code>real_type</code> <code>(str, None)</code> <p>real type described in Kiwoom REST API.</p> required <code>callback</code> <code>Callable</code> <p>callback function takes raw msg str as an argument</p> required"},{"location":"api/#kiwoom.api.API.register_tick","title":"register_tick  <code>async</code>","text":"<pre><code>register_tick(grp_no, codes, refresh='1')\n</code></pre> <p>(\uc2e4\uc2dc\uac04\uc2dc\uc138 &gt; \uc8fc\uc2dd\uccb4\uacb0 '0B') Register transactions with given grp_no and codes with refresh option.</p> <p>Parameters:</p> Name Type Description Default <code>grp_no</code> <code>str</code> <p>\uadf8\ub8f9\ubc88\ud638</p> required <code>codes</code> <code>list[str]</code> <p>\uc885\ubaa9\ucf54\ub4dc</p> required <code>refresh</code> <code>str</code> <p>\uae30\uc874\ub4f1\ub85d\uc720\uc9c0\uc5ec\ubd80(\uae30\uc874\uc720\uc9c0:'1', \uc2e0\uaddc\ub4f1\ub85d:'0'). Defaults to '1'.</p> <code>'1'</code>"},{"location":"api/#kiwoom.api.API.register_hoga","title":"register_hoga  <code>async</code>","text":"<pre><code>register_hoga(grp_no, codes, refresh='1')\n</code></pre> <p>(\uc2e4\uc2dc\uac04\uc2dc\uc138 &gt; \uc8fc\uc2dd\ud638\uac00\uc794\ub7c9 '0D') Register order book with given grp_no and codes with refresh option.</p> <p>Parameters:</p> Name Type Description Default <code>grp_no</code> <code>str</code> <p>\uadf8\ub8f9\ubc88\ud638</p> required <code>codes</code> <code>list[str]</code> <p>\uc885\ubaa9\ucf54\ub4dc</p> required <code>refresh</code> <code>str</code> <p>\uae30\uc874\ub4f1\ub85d\uc720\uc9c0\uc5ec\ubd80(\uae30\uc874\uc720\uc9c0:'1', \uc2e0\uaddc\ub4f1\ub85d:'0'). Defaults to '1'.</p> <code>'1'</code>"},{"location":"api/#kiwoom.api.API.remove_register","title":"remove_register  <code>async</code>","text":"<pre><code>remove_register(grp_no, type)\n</code></pre> <p>Remove registered group with given grp_no and real tr type. if types is empty, nothing is done.</p> <p>Parameters:</p> Name Type Description Default <code>grp_no</code> <code>str</code> <p>\uadf8\ub8f9\ubc88\ud638</p> required <code>type</code> <code>str | list[str]</code> <p>\uc2e4\uc2dc\uac04 \ub370\uc774\ud130 \ud0c0\uc785 e.g. (0B, 0D, DD)</p> required"},{"location":"api/#kiwoom.bot","title":"bot","text":""},{"location":"api/#kiwoom.bot.Bot","title":"Bot","text":"<p>The highest level of usage for Kiwoom REST API</p>"},{"location":"api/#kiwoom.bot.Bot.api","title":"api  <code>instance-attribute</code>","text":"<pre><code>api = API(host, appkey, secretkey)\n</code></pre>"},{"location":"api/#kiwoom.bot.Bot.debug","title":"debug","text":"<pre><code>debug(debugging=True)\n</code></pre> <p>Set debugging mode that will print every request and response.</p> <p>Parameters:</p> Name Type Description Default <code>debugging</code> <code>bool</code> <p>debugging mode is False at first</p> <code>True</code>"},{"location":"api/#kiwoom.bot.Bot.token","title":"token","text":"<pre><code>token()\n</code></pre> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>token</p>"},{"location":"api/#kiwoom.bot.Bot.connect","title":"connect  <code>async</code>","text":"<pre><code>connect()\n</code></pre> <p>Connect to Kiwoom REST API server.</p>"},{"location":"api/#kiwoom.bot.Bot.close","title":"close  <code>async</code>","text":"<pre><code>close()\n</code></pre> <p>Close the connection and clean up resources.</p>"},{"location":"api/#kiwoom.bot.Bot.stock_list","title":"stock_list  <code>async</code>","text":"<pre><code>stock_list(market, ats=True)\n</code></pre> <p>Get stock list for given market.</p> <p>Parameters:</p> Name Type Description Default <code>market</code> <code>str</code> <p>{ 'KOSPI': '0', 'KOSDAQ': '10', 'ELW': '3', '\ubba4\ucd94\uc5bc\ud380\ub4dc': '4', '\uc2e0\uc8fc\uc778\uc218\uad8c': '5', '\ub9ac\uce20': '6', 'ETF': '8', '\ud558\uc774\uc77c\ub4dc\ud380\ub4dc': '9', 'K-OTC': '30', 'KONEX': '50', 'ETN': '60', 'NXT': 'NXT'</p> required <code>ats</code> <code>bool</code> <p>\ub300\uccb4\uac70\ub798\uc18c \ubc18\uc601\ud55c \ud1b5\ud569\ucf54\ub4dc \uc5ec\ubd80. Defaults to True.</p> <code>True</code> <p>Returns:</p> Type Description <code>list[str]</code> <p>list[str]: stock codes</p>"},{"location":"api/#kiwoom.bot.Bot.candle","title":"candle  <code>async</code>","text":"<pre><code>candle(code, period, ctype, start=None, end=None)\n</code></pre> <p>Get candle chart data for given code, period, and code type.</p> <p>Parameters:</p> Name Type Description Default <code>code</code> <code>str</code> <p>code of stock or sector, e.g. '005930_AL'</p> required <code>period</code> <code>str</code> <p>period of candle, {\"tick\", \"min\", \"day\"}</p> required <code>ctype</code> <code>str</code> <p>type of stock or sector, {\"stock\", \"sector\"}</p> required <code>start</code> <code>str</code> <p>start date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <code>end</code> <code>str</code> <p>end date in YYYYMMDD format. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>DataFrame</code> <code>DataFrame</code> <p>description</p>"},{"location":"api/#kiwoom.bot.Bot.trade","title":"trade  <code>async</code>","text":"<pre><code>trade(start, end='')\n</code></pre> <p>\uacc4\uc88c \uccb4\uacb0\ub0b4\uc5ed (\ud0a4\uc6c0\uc99d\uad8c 0343 \ud654\uba74) Get trade data for given start and end date.</p> <p>Parameters:</p> Name Type Description Default <code>start</code> <code>str</code> <p>start date in YYYYMMDD format.</p> required <code>end</code> <code>str</code> <p>end date in YYYYMMDD format. Defaults to \"\".</p> <code>''</code> <p>Returns:</p> Name Type Description <code>DataFrame</code> <code>DataFrame</code> <p>\ud0a4\uc6c0\uc99d\uad8c 0343 \ud654\uba74 \uccb4\uacb0\ub0b4\uc5ed Excel \ud615\uc2dd</p>"},{"location":"api/#kiwoom.bot.Bot.run","title":"run  <code>async</code>","text":"<pre><code>run()\n</code></pre> <p>Run the bot with strategy logic.</p>"},{"location":"api/#kiwoom.config","title":"config","text":""},{"location":"api/#kiwoom.config.ENCODING","title":"ENCODING  <code>module-attribute</code>","text":"<pre><code>ENCODING = 'euc-kr'\n</code></pre>"},{"location":"api/#kiwoom.config.MOCK","title":"MOCK  <code>module-attribute</code>","text":"<pre><code>MOCK = 'https://mockapi.kiwoom.com'\n</code></pre>"},{"location":"api/#kiwoom.config.REAL","title":"REAL  <code>module-attribute</code>","text":"<pre><code>REAL = 'https://api.kiwoom.com'\n</code></pre>"},{"location":"api/#kiwoom.config.candle","title":"candle","text":""},{"location":"api/#kiwoom.config.candle.PERIOD_TO_API_ID","title":"PERIOD_TO_API_ID  <code>module-attribute</code>","text":"<pre><code>PERIOD_TO_API_ID = {'stock': {'tick': 'ka10079', 'min': 'ka10080', 'day': 'ka10081'}, 'sector': {'tick': 'ka20004', 'min': 'ka20005', 'day': 'ka20006'}}\n</code></pre>"},{"location":"api/#kiwoom.config.candle.PERIOD_TO_DATA","title":"PERIOD_TO_DATA  <code>module-attribute</code>","text":"<pre><code>PERIOD_TO_DATA = {'stock': {'tick': {'stk_cd': '', 'tic_scope': '1', 'upd_stkpc_tp': '1'}, 'min': {'stk_cd': '', 'tic_scope': '1', 'upd_stkpc_tp': '1'}, 'day': {'stk_cd': '', 'base_dt': '', 'upd_stkpc_tp': '1'}}, 'sector': {'tick': {'inds_cd': '', 'tic_scope': '1'}, 'min': {'inds_cd': '', 'tic_scope': '1'}, 'day': {'inds_cd': '', 'base_dt': ''}}}\n</code></pre>"},{"location":"api/#kiwoom.config.candle.PERIOD_TO_TIME_KEY","title":"PERIOD_TO_TIME_KEY  <code>module-attribute</code>","text":"<pre><code>PERIOD_TO_TIME_KEY = {'tick': 'cntr_tm', 'min': 'cntr_tm', 'day': 'dt'}\n</code></pre>"},{"location":"api/#kiwoom.config.candle.PERIOD_TO_TIME_FORMAT","title":"PERIOD_TO_TIME_FORMAT  <code>module-attribute</code>","text":"<pre><code>PERIOD_TO_TIME_FORMAT = {'tick': '%Y%m%d%H%M%S', 'min': '%Y%m%d%H%M%S', 'day': '%Y%m%d'}\n</code></pre>"},{"location":"api/#kiwoom.config.candle.PERIOD_TO_BODY_KEY","title":"PERIOD_TO_BODY_KEY  <code>module-attribute</code>","text":"<pre><code>PERIOD_TO_BODY_KEY = {'stock': {'tick': 'stk_tic_chart_qry', 'min': 'stk_min_pole_chart_qry', 'day': 'stk_dt_pole_chart_qry'}, 'sector': {'tick': 'inds_tic_chart_qry', 'min': 'inds_min_pole_qry', 'day': 'inds_dt_pole_qry'}}\n</code></pre>"},{"location":"api/#kiwoom.config.candle.PERIOD_TO_COLUMN","title":"PERIOD_TO_COLUMN  <code>module-attribute</code>","text":"<pre><code>PERIOD_TO_COLUMN = {'tick': ['\uccb4\uacb0\uc2dc\uac04', '\uccb4\uacb0\uac00', '\uac70\ub798\ub7c9'], 'min': ['\uccb4\uacb0\uc2dc\uac04', '\uc2dc\uac00', '\uace0\uac00', '\uc800\uac00', '\uc885\uac00', '\uac70\ub798\ub7c9'], 'day': ['\uc77c\uc790', '\uc2dc\uac00', '\uace0\uac00', '\uc800\uac00', '\uc885\uac00', '\uac70\ub798\ub7c9', '\uac70\ub798\ub300\uae08']}\n</code></pre>"},{"location":"api/#kiwoom.config.candle.COLUMN_MAPPER_CANDLE","title":"COLUMN_MAPPER_CANDLE  <code>module-attribute</code>","text":"<pre><code>COLUMN_MAPPER_CANDLE = {'tick': {'cntr_tm': '\uccb4\uacb0\uc2dc\uac04', 'cur_prc': '\uccb4\uacb0\uac00', 'trde_qty': '\uac70\ub798\ub7c9'}, 'min': {'cntr_tm': '\uccb4\uacb0\uc2dc\uac04', 'open_pric': '\uc2dc\uac00', 'high_pric': '\uace0\uac00', 'low_pric': '\uc800\uac00', 'cur_prc': '\uc885\uac00', 'trde_qty': '\uac70\ub798\ub7c9'}, 'day': {'dt': '\uc77c\uc790', 'open_pric': '\uc2dc\uac00', 'high_pric': '\uace0\uac00', 'low_pric': '\uc800\uac00', 'cur_prc': '\uc885\uac00', 'trde_qty': '\uac70\ub798\ub7c9', 'trde_prica': '\uac70\ub798\ub300\uae08'}}\n</code></pre>"},{"location":"api/#kiwoom.config.candle.DELAYED_MARKET_OPENING","title":"DELAYED_MARKET_OPENING  <code>module-attribute</code>","text":"<pre><code>DELAYED_MARKET_OPENING = {'20201203': 1, '20211118': 1, '20221117': 1, '20231116': 1, '20241114': 1, '20251113': 1}\n</code></pre>"},{"location":"api/#kiwoom.config.candle.handle_time","title":"handle_time","text":"<pre><code>handle_time(df, code, period)\n</code></pre>"},{"location":"api/#kiwoom.config.candle.valid","title":"valid","text":"<pre><code>valid(body, period, ctype)\n</code></pre>"},{"location":"api/#kiwoom.config.http","title":"http","text":""},{"location":"api/#kiwoom.config.http.REQ_LIMIT_TIME","title":"REQ_LIMIT_TIME  <code>module-attribute</code>","text":"<pre><code>REQ_LIMIT_TIME = 0.205\n</code></pre>"},{"location":"api/#kiwoom.config.http.REQ_LIMIT_PER_SECOND","title":"REQ_LIMIT_PER_SECOND  <code>module-attribute</code>","text":"<pre><code>REQ_LIMIT_PER_SECOND = 5\n</code></pre>"},{"location":"api/#kiwoom.config.http.HTTP_TOTAL_TIMEOUT","title":"HTTP_TOTAL_TIMEOUT  <code>module-attribute</code>","text":"<pre><code>HTTP_TOTAL_TIMEOUT = 10.0\n</code></pre>"},{"location":"api/#kiwoom.config.http.HTTP_CONNECT_TIMEOUT","title":"HTTP_CONNECT_TIMEOUT  <code>module-attribute</code>","text":"<pre><code>HTTP_CONNECT_TIMEOUT = 3.0\n</code></pre>"},{"location":"api/#kiwoom.config.http.HTTP_READ_TIMEOUT","title":"HTTP_READ_TIMEOUT  <code>module-attribute</code>","text":"<pre><code>HTTP_READ_TIMEOUT = 5.0\n</code></pre>"},{"location":"api/#kiwoom.config.http.HTTP_TCP_CONNECTORS","title":"HTTP_TCP_CONNECTORS  <code>module-attribute</code>","text":"<pre><code>HTTP_TCP_CONNECTORS = 100\n</code></pre>"},{"location":"api/#kiwoom.config.http.WEBSOCKET_HEARTBEAT","title":"WEBSOCKET_HEARTBEAT  <code>module-attribute</code>","text":"<pre><code>WEBSOCKET_HEARTBEAT = 30\n</code></pre>"},{"location":"api/#kiwoom.config.http.WEBSOCKET_MAX_CONCURRENCY","title":"WEBSOCKET_MAX_CONCURRENCY  <code>module-attribute</code>","text":"<pre><code>WEBSOCKET_MAX_CONCURRENCY = 1000\n</code></pre>"},{"location":"api/#kiwoom.config.http.STATUS_CODE","title":"STATUS_CODE  <code>module-attribute</code>","text":"<pre><code>STATUS_CODE = {200: 'OK', 400: 'Bad Request', 404: 'Not Found', 500: 'Internal Server Error'}\n</code></pre>"},{"location":"api/#kiwoom.config.real","title":"real","text":""},{"location":"api/#kiwoom.config.real.Real","title":"Real","text":"<p>               Bases: <code>Struct</code></p>"},{"location":"api/#kiwoom.config.real.Real.trnm","title":"trnm  <code>instance-attribute</code>","text":"<pre><code>trnm\n</code></pre>"},{"location":"api/#kiwoom.config.real.Real.data","title":"data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>data = None\n</code></pre>"},{"location":"api/#kiwoom.config.real.Real.Data","title":"Data","text":"<p>               Bases: <code>Struct</code></p> type <code>instance-attribute</code> <pre><code>type\n</code></pre> item <code>instance-attribute</code> <pre><code>item\n</code></pre>"},{"location":"api/#kiwoom.config.real.Tick","title":"Tick","text":"<p>               Bases: <code>Struct</code></p>"},{"location":"api/#kiwoom.config.real.Tick.trnm","title":"trnm  <code>instance-attribute</code>","text":"<pre><code>trnm\n</code></pre>"},{"location":"api/#kiwoom.config.real.Tick.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data\n</code></pre>"},{"location":"api/#kiwoom.config.real.Tick.Data","title":"Data","text":"<p>               Bases: <code>Struct</code></p> item <code>instance-attribute</code> <pre><code>item\n</code></pre> values <code>instance-attribute</code> <pre><code>values\n</code></pre> Values <p>               Bases: <code>Struct</code></p> v20 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v20 = field(name='20')\n</code></pre> v10 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v10 = field(name='10')\n</code></pre> v15 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v15 = field(name='15')\n</code></pre>"},{"location":"api/#kiwoom.config.real.Hoga","title":"Hoga","text":"<p>               Bases: <code>Struct</code></p>"},{"location":"api/#kiwoom.config.real.Hoga.trnm","title":"trnm  <code>instance-attribute</code>","text":"<pre><code>trnm\n</code></pre>"},{"location":"api/#kiwoom.config.real.Hoga.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data\n</code></pre>"},{"location":"api/#kiwoom.config.real.Hoga.Data","title":"Data","text":"<p>               Bases: <code>Struct</code></p> item <code>instance-attribute</code> <pre><code>item\n</code></pre> values <code>instance-attribute</code> <pre><code>values\n</code></pre> Values <p>               Bases: <code>Struct</code></p> v21 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v21 = field(name='21')\n</code></pre> v41 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v41 = field(name='41')\n</code></pre> v61 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v61 = field(name='61')\n</code></pre> v51 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v51 = field(name='51')\n</code></pre> v71 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v71 = field(name='71')\n</code></pre> v42 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v42 = field(name='42')\n</code></pre> v62 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v62 = field(name='62')\n</code></pre> v52 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v52 = field(name='52')\n</code></pre> v72 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v72 = field(name='72')\n</code></pre> v43 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v43 = field(name='43')\n</code></pre> v63 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v63 = field(name='63')\n</code></pre> v53 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v53 = field(name='53')\n</code></pre> v73 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v73 = field(name='73')\n</code></pre> v44 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v44 = field(name='44')\n</code></pre> v64 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v64 = field(name='64')\n</code></pre> v54 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v54 = field(name='54')\n</code></pre> v74 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v74 = field(name='74')\n</code></pre> v45 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v45 = field(name='45')\n</code></pre> v65 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v65 = field(name='65')\n</code></pre> v55 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v55 = field(name='55')\n</code></pre> v75 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v75 = field(name='75')\n</code></pre> v46 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v46 = field(name='46')\n</code></pre> v66 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v66 = field(name='66')\n</code></pre> v56 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v56 = field(name='56')\n</code></pre> v76 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v76 = field(name='76')\n</code></pre> v47 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v47 = field(name='47')\n</code></pre> v67 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v67 = field(name='67')\n</code></pre> v57 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v57 = field(name='57')\n</code></pre> v77 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v77 = field(name='77')\n</code></pre> v48 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v48 = field(name='48')\n</code></pre> v68 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v68 = field(name='68')\n</code></pre> v58 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v58 = field(name='58')\n</code></pre> v78 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v78 = field(name='78')\n</code></pre> v49 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v49 = field(name='49')\n</code></pre> v69 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v69 = field(name='69')\n</code></pre> v59 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v59 = field(name='59')\n</code></pre> v79 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v79 = field(name='79')\n</code></pre> v50 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v50 = field(name='50')\n</code></pre> v70 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v70 = field(name='70')\n</code></pre> v60 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v60 = field(name='60')\n</code></pre> v80 <code>class-attribute</code> <code>instance-attribute</code> <pre><code>v80 = field(name='80')\n</code></pre>"},{"location":"api/#kiwoom.config.real.Types","title":"Types","text":""},{"location":"api/#kiwoom.config.real.Types.TICK","title":"TICK  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TICK = {'20': int, '10': int, '15': int}\n</code></pre>"},{"location":"api/#kiwoom.config.real.Types.HOGA","title":"HOGA  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HOGA = {'21': int, '41': int, '61': int, '51': int, '71': int, '42': int, '62': int, '52': int, '72': int, '43': int, '63': int, '53': int, '73': int, '44': int, '64': int, '54': int, '74': int, '45': int, '65': int, '55': int, '75': int, '46': int, '66': int, '56': int, '76': int, '47': int, '67': int, '57': int, '77': int, '48': int, '68': int, '58': int, '78': int, '49': int, '69': int, '59': int, '79': int, '50': int, '70': int, '60': int, '80': int}\n</code></pre>"},{"location":"api/#kiwoom.config.settings","title":"settings","text":""},{"location":"api/#kiwoom.config.settings.REAL","title":"REAL  <code>module-attribute</code>","text":"<pre><code>REAL = 'https://api.kiwoom.com'\n</code></pre>"},{"location":"api/#kiwoom.config.settings.MOCK","title":"MOCK  <code>module-attribute</code>","text":"<pre><code>MOCK = 'https://mockapi.kiwoom.com'\n</code></pre>"},{"location":"api/#kiwoom.config.settings.ENCODING","title":"ENCODING  <code>module-attribute</code>","text":"<pre><code>ENCODING = 'euc-kr'\n</code></pre>"},{"location":"api/#kiwoom.config.trade","title":"trade","text":""},{"location":"api/#kiwoom.config.trade.REQUEST_LIMIT_DAYS","title":"REQUEST_LIMIT_DAYS  <code>module-attribute</code>","text":"<pre><code>REQUEST_LIMIT_DAYS = 60 + 5\n</code></pre>"},{"location":"api/#kiwoom.config.trade.COLUMN_TRADE","title":"COLUMN_TRADE  <code>module-attribute</code>","text":"<pre><code>COLUMN_TRADE = ['\uc8fc\uc2dd\ucc44\uad8c', '\uc8fc\ubb38\ubc88\ud638', '\uc6d0\uc8fc\ubb38\ubc88\ud638', '\uc885\ubaa9\ubc88\ud638', '\ub9e4\ub9e4\uad6c\ubd84', '\uc8fc\ubb38\uc720\ud615\uad6c\ubd84', '\uc8fc\ubb38\uc218\ub7c9', '\uc8fc\ubb38\ub2e8\uac00', '\ud655\uc778\uc218\ub7c9', '\uccb4\uacb0\ubc88\ud638', '\uc2a4\ud1b1\uac00', '\uc8fc\ubb38\uc77c\uc790', '\uc885\ubaa9\uba85', '\uc811\uc218\uad6c\ubd84', '\uc2e0\uc6a9\uac70\ub798\uad6c\ubd84', '\uccb4\uacb0\uc218\ub7c9', '\uccb4\uacb0\ud3c9\uade0\ub2e8\uac00', '\uc815\uc815/\ucde8\uc18c', '\ud1b5\uc2e0', '\uc608\uc57d/\ubc18\ub300', '\uccb4\uacb0\uc2dc\uac04', '\uac70\ub798\uc18c']\n</code></pre>"},{"location":"api/#kiwoom.config.trade.COLUMN_MAPPER_TRADE","title":"COLUMN_MAPPER_TRADE  <code>module-attribute</code>","text":"<pre><code>COLUMN_MAPPER_TRADE = {'stk_bond_tp': '\uc8fc\uc2dd\ucc44\uad8c', 'ord_no': '\uc8fc\ubb38\ubc88\ud638', 'orig_ord_no': '\uc6d0\uc8fc\ubb38\ubc88\ud638', 'stk_cd': '\uc885\ubaa9\ubc88\ud638', 'trde_tp': '\ub9e4\ub9e4\uad6c\ubd84', 'io_tp_nm': '\uc8fc\ubb38\uc720\ud615\uad6c\ubd84', 'ord_qty': '\uc8fc\ubb38\uc218\ub7c9', 'ord_uv': '\uc8fc\ubb38\ub2e8\uac00', 'cnfm_qty': '\ud655\uc778\uc218\ub7c9', 'cntr_no': '\uccb4\uacb0\ubc88\ud638', 'cond_uv': '\uc2a4\ud1b1\uac00', 'ord_dt': '\uc8fc\ubb38\uc77c\uc790', 'stk_nm': '\uc885\ubaa9\uba85', 'acpt_tp': '\uc811\uc218\uad6c\ubd84', 'crd_deal_tp': '\uc2e0\uc6a9\uac70\ub798\uad6c\ubd84', 'cntr_qty': '\uccb4\uacb0\uc218\ub7c9', 'cntr_uv': '\uccb4\uacb0\ud3c9\uade0\ub2e8\uac00', 'mdfy_cncl_tp': '\uc815\uc815/\ucde8\uc18c', 'comm_ord_tp': '\ud1b5\uc2e0', 'rsrv_oppo': '\uc608\uc57d/\ubc18\ub300', 'cntr_tm': '\uccb4\uacb0\uc2dc\uac04', 'dmst_stex_tp': '\uac70\ub798\uc18c'}\n</code></pre>"},{"location":"api/#kiwoom.http","title":"http","text":""},{"location":"api/#kiwoom.http.client","title":"client","text":""},{"location":"api/#kiwoom.http.client.Client","title":"Client","text":""},{"location":"api/#kiwoom.http.client.Client.host","title":"host  <code>instance-attribute</code>","text":"<pre><code>host = host\n</code></pre>"},{"location":"api/#kiwoom.http.client.Client.debugging","title":"debugging  <code>instance-attribute</code>","text":"<pre><code>debugging = False\n</code></pre>"},{"location":"api/#kiwoom.http.client.Client.ready","title":"ready  <code>async</code>","text":"<pre><code>ready()\n</code></pre> <p>Check connection and request limits. if timeout, raise TimeoutError.</p>"},{"location":"api/#kiwoom.http.client.Client.connect","title":"connect  <code>async</code>","text":"<pre><code>connect(appkey, secretkey)\n</code></pre> <p>Connect to the server with async lock</p> <p>Parameters:</p> Name Type Description Default <code>appkey</code> <code>str</code> <p>file path or raw appkey</p> required <code>secretkey</code> <code>str</code> <p>file path or raw secretkey</p> required"},{"location":"api/#kiwoom.http.client.Client.close","title":"close  <code>async</code>","text":"<pre><code>close()\n</code></pre>"},{"location":"api/#kiwoom.http.client.Client.token","title":"token","text":"<pre><code>token()\n</code></pre> <p>Returns token if available, otherwise returns empty string.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>Invalid token.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>token</p>"},{"location":"api/#kiwoom.http.client.Client.headers","title":"headers","text":"<pre><code>headers(api_id, cont_yn='N', next_key='', headers=None)\n</code></pre> <p>Generate headers for the request.</p> <p>Parameters:</p> Name Type Description Default <code>api_id</code> <code>str</code> <p>api id</p> required <code>cont_yn</code> <code>str</code> <p>continue yn. Defaults to \"N\".</p> <code>'N'</code> <code>next_key</code> <code>str</code> <p>next key. Defaults to \"\".</p> <code>''</code> <code>headers</code> <code>dict | None</code> <p>headers of the request. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>dict[str, str]</code> <p>dict[str, str]: headers</p>"},{"location":"api/#kiwoom.http.client.Client.post","title":"post  <code>async</code>","text":"<pre><code>post(endpoint, api_id, headers=None, data=None)\n</code></pre> <p>Post request to the server, but using client.request function is recommended. Request limit and connection status are checked globally and automatically.</p> <p>Parameters:</p> Name Type Description Default <code>endpoint</code> <code>str</code> <p>endpoint of the server</p> required <code>api_id</code> <code>str</code> <p>api id</p> required <code>headers</code> <code>dict | None</code> <p>headers of the request. Defaults to None.</p> <code>None</code> <code>data</code> <code>dict | None</code> <p>data of the request. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>ClientResponse</code> <p>aiohttp.ClientResponse: async response from the server, but this will be converted to kiwoom.http.response.Response by debugger.</p>"},{"location":"api/#kiwoom.http.client.Client.request","title":"request  <code>async</code>","text":"<pre><code>request(endpoint, api_id, headers=None, data=None)\n</code></pre> <p>Requests to the server and returns response with error handling.</p> <p>Parameters:</p> Name Type Description Default <code>endpoint</code> <code>str</code> <p>endpoint of the server</p> required <code>api_id</code> <code>str</code> <p>api id</p> required <code>headers</code> <code>dict | None</code> <p>headers of the request. Defaults to None.</p> <code>None</code> <code>data</code> <code>dict | None</code> <p>data of the request. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>RuntimeError when return_code is not in [0, 3, 20]</p> <p>Returns:</p> Name Type Description <code>Response</code> <code>Response</code> <p>response wrapped by kiwoom.http.response.Response</p>"},{"location":"api/#kiwoom.http.client.Client.request_until","title":"request_until  <code>async</code>","text":"<pre><code>request_until(should_continue, endpoint, api_id, headers=None, data=None)\n</code></pre> <p>Request until 'cont-yn' in response header is 'Y', and should_continue(body) evaluates to True.</p> <p>Parameters:</p> Name Type Description Default <code>should_continue</code> <code>Callable</code> <p>callable that takes body(dict) and returns boolean value to request again or not</p> required <code>endpoint</code> <code>str</code> <p>endpoint of the server</p> required <code>api_id</code> <code>str</code> <p>api id</p> required <code>headers</code> <code>dict | None</code> <p>headers of the request. Defaults to None.</p> <code>None</code> <code>data</code> <code>dict | None</code> <p>data of the request. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>response body</p>"},{"location":"api/#kiwoom.http.debug","title":"debug","text":""},{"location":"api/#kiwoom.http.debug.dumps","title":"dumps","text":"<pre><code>dumps(api, endpoint, api_id, headers, data, res)\n</code></pre> <p>Dump request and response to string for debugging.</p> <p>Parameters:</p> Name Type Description Default <code>api</code> <code>Client</code> <p>Client instance</p> required <code>endpoint</code> <code>str</code> <p>endpoint</p> required <code>api_id</code> <code>str</code> <p>api id</p> required <code>headers</code> <code>dict</code> <p>headers</p> required <code>data</code> <code>dict</code> <p>data</p> required <code>res</code> <code>Response</code> <p>wrapped response</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>description</p>"},{"location":"api/#kiwoom.http.debug.debugger","title":"debugger","text":"<pre><code>debugger(fn)\n</code></pre> <p>Debugger decorator for Client.post method. Even though debugging is disabled, it will print if error occurs.</p> <p>Parameters:</p> Name Type Description Default <code>fn</code> <code>function</code> <p>function to be decorated</p> required <p>Raises:</p> Type Description <code>err</code> <p>propagate HTTPException from original function</p> <p>Returns:</p> Name Type Description <code>Response</code> <p>wrapped response</p>"},{"location":"api/#kiwoom.http.response","title":"response","text":""},{"location":"api/#kiwoom.http.response.Response","title":"Response","text":"<p>Response wrapper for aiohttp.ClientResponse</p>"},{"location":"api/#kiwoom.http.response.Response.url","title":"url  <code>instance-attribute</code>","text":"<pre><code>url = url\n</code></pre>"},{"location":"api/#kiwoom.http.response.Response.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status = status\n</code></pre>"},{"location":"api/#kiwoom.http.response.Response.headers","title":"headers  <code>instance-attribute</code>","text":"<pre><code>headers = headers\n</code></pre>"},{"location":"api/#kiwoom.http.response.Response.body","title":"body  <code>instance-attribute</code>","text":"<pre><code>body = body\n</code></pre>"},{"location":"api/#kiwoom.http.response.Response.json","title":"json","text":"<pre><code>json()\n</code></pre> <p>Returns already parsed body.</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>body in json format</p>"},{"location":"api/#kiwoom.http.socket","title":"socket","text":""},{"location":"api/#kiwoom.http.socket.Socket","title":"Socket","text":""},{"location":"api/#kiwoom.http.socket.Socket.REAL","title":"REAL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>REAL = 'wss://api.kiwoom.com:10000'\n</code></pre>"},{"location":"api/#kiwoom.http.socket.Socket.MOCK","title":"MOCK  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MOCK = 'wss://mockapi.kiwoom.com:10000'\n</code></pre>"},{"location":"api/#kiwoom.http.socket.Socket.ENDPOINT","title":"ENDPOINT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ENDPOINT = '/api/dostk/websocket'\n</code></pre>"},{"location":"api/#kiwoom.http.socket.Socket.url","title":"url  <code>instance-attribute</code>","text":"<pre><code>url = url\n</code></pre>"},{"location":"api/#kiwoom.http.socket.Socket.connect","title":"connect  <code>async</code>","text":"<pre><code>connect(session, token)\n</code></pre> <p>Connect to Kiwoom websocket server.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>ClientSession</code> <p>aiohttp ClientSession from API.connect()</p> required <code>token</code> <code>str</code> <p>token for authentication</p> required"},{"location":"api/#kiwoom.http.socket.Socket.close","title":"close  <code>async</code>","text":"<pre><code>close()\n</code></pre> <p>Close the websocket and the task.</p>"},{"location":"api/#kiwoom.http.socket.Socket.send","title":"send  <code>async</code>","text":"<pre><code>send(msg)\n</code></pre> <p>Send data to Kiwoom websocket server.</p> <p>Parameters:</p> Name Type Description Default <code>msg</code> <code>str | dict</code> <p>msg should be in json format</p> required"},{"location":"api/#kiwoom.http.socket.Socket.recv","title":"recv  <code>async</code>","text":"<pre><code>recv()\n</code></pre> <p>Receive data from Kiwoom websocket server and return data. If message type is not str, close the websocket and raise RuntimeError.</p> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>Websocket Connection Error</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>received json formatted data from websocket</p>"},{"location":"api/#kiwoom.http.socket.Socket.run","title":"run  <code>async</code>","text":"<pre><code>run()\n</code></pre> <p>Receive data from websocket and put data to the queue. If the websocket is closed, close the queue and the task. Run this task in background with asyncio.create_task().</p>"},{"location":"api/#kiwoom.http.utils","title":"utils","text":""},{"location":"api/#kiwoom.http.utils.RateLimiter","title":"RateLimiter","text":""},{"location":"api/#kiwoom.http.utils.RateLimiter.acquire","title":"acquire  <code>async</code>","text":"<pre><code>acquire()\n</code></pre>"},{"location":"api/#kiwoom.http.utils.wrap_async_callback","title":"wrap_async_callback","text":"<pre><code>wrap_async_callback(semaphore, callback)\n</code></pre> <p>Wrap async callback to run in async context.</p> <p>Parameters:</p> Name Type Description Default <code>semaphore</code> <code>Semaphore</code> <p>semaphore to limit the number of callbacks</p> required <code>callback</code> <code>Callable</code> <p>callback to be wrapped</p> required <p>Returns:</p> Name Type Description <code>Callable</code> <p>wrapped callback</p>"},{"location":"api/#kiwoom.http.utils.wrap_sync_callback","title":"wrap_sync_callback","text":"<pre><code>wrap_sync_callback(semaphore, callback)\n</code></pre> <p>Wrap sync callback to run in async context.</p> <p>Parameters:</p> Name Type Description Default <code>semaphore</code> <code>Semaphore</code> <p>semaphore to limit the number of callbacks</p> required <code>callback</code> <code>Callable</code> <p>callback to be wrapped</p> required <p>Returns:</p> Name Type Description <code>Callable</code> <p>wrapped callback</p>"},{"location":"api/#kiwoom.proc","title":"proc","text":""},{"location":"api/#kiwoom.proc.stock_list","title":"stock_list","text":"<pre><code>stock_list(data, ats=True)\n</code></pre>"},{"location":"api/#kiwoom.proc.candle","title":"candle","text":""},{"location":"api/#kiwoom.proc.candle.process","title":"process","text":"<pre><code>process(data, code, period, ctype, start, end)\n</code></pre>"},{"location":"api/#kiwoom.proc.candle.to_csv","title":"to_csv  <code>async</code>","text":"<pre><code>to_csv(file, path, df, encoding=ENCODING)\n</code></pre>"},{"location":"api/#kiwoom.proc.processes","title":"processes","text":""},{"location":"api/#kiwoom.proc.processes.stock_list","title":"stock_list","text":"<pre><code>stock_list(data, ats=True)\n</code></pre>"},{"location":"api/#kiwoom.proc.trade","title":"trade","text":""},{"location":"api/#kiwoom.proc.trade.process","title":"process","text":"<pre><code>process(data)\n</code></pre>"},{"location":"api/#kiwoom.proc.trade.to_csv","title":"to_csv  <code>async</code>","text":"<pre><code>to_csv(file, path, df, encoding=ENCODING)\n</code></pre>"}]}